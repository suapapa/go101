package main

import (
	"crypto/tls"
	"encoding/json"
	"log"
	"net/http"
)

type Resp struct {
	Say string `json:"say"`
	To  string `json:"to"`
}

func main() {
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	// curl -v -k https://127.0.0.1:443/hello\?name\=고퍼
	// TODO: This is insecure; use only in dev environments.
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}

	req, err := http.NewRequest("GET", "https://127.0.0.1:443/hello?name=고퍼", nil)
	chk(err)

	resp, err := client.Do(req)
	chk(err)
	defer resp.Body.Close()

	var respVal Resp
	err = json.NewDecoder(resp.Body).Decode(&respVal)
	chk(err)

	log.Printf("Server said %s to %s", respVal.Say, respVal.To)
}

func chk(err error) {
	if err != nil {
		log.Fatal(err)
	}
}
